#!/bin/bash

CYAN="$(printf '\033[36m')"
GREEN="$(printf '\033[32m')"
ORANGE="$(printf '\033[33m')"
BLUE="$(printf '\033[34m')"
RED="$(printf '\033[31m')"
RESETBG="$(printf '\e[0m\n')"

# Configuration and Setup Functions

configuration_setup() {
    while true; do
        clear
        echo -e "${RED}Configuration and Setup Options:${RESETBG}"
        echo -e "${RED}[${WHITE}1${RED}]${ORANGE} Set user name ${GREEN}git config --global user.name username"
        echo -e "${RED}[${WHITE}2${RED}]${ORANGE} Set user email ${GREEN}git config --global user.email useremail"
        echo -e "${RED}[${WHITE}3${RED}]${ORANGE} View configuration ${GREEN}git config --list"
        echo -e "${RED}[${WHITE}4${RED}]${ORANGE} Initialize repository ${GREEN}git init"
        echo -e "${RED}[${WHITE}0${RED}]${ORANGE} Back to main menu"
        echo
        read -p "${RED}[${WHITE}-${RED}]${GREEN} Select an option: ${BLUE}" selected

        case $selected in
            1) set_user_name ;;
            2) set_user_email ;;
            3) view_config ;;
            4) initialise ;;
            0) break ;;
            *)
                echo "${RED}Invalid option! Please try again."
                ;;
        esac

        read -p "${GREEN}Press [Enter] to continue..." dummy
    done
}

set_user_name() {
    read -p "${GREEN}Enter your name: ${BLUE}" name
    if [[ -z "$name" ]]; then
        echo -e "${RED}Error: Name cannot be empty.${RESETBG}"
        return
    fi
    git config --global user.name "$name" || echo -e "${RED}Error: Failed to set user name.${RESETBG}"
    echo -e "${GREEN}User name set to $name${RESETBG}"
}

set_user_email() {
    read -p "${GREEN}Enter your email: ${BLUE}" email
    if [[ ! "$email" =~ ^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$ ]]; then
        echo -e "${RED}Error: Invalid email format.${RESETBG}"
        return
    fi
    git config --global user.email "$email" || echo -e "${RED}Error: Failed to set user email.${RESETBG}"
    echo -e "${GREEN}User email set to $email${RESETBG}"
}

view_config() {
    echo -e "${GREEN}Git Configuration:${RESETBG}"
    git config --global --list
}

initialise() {
    read -p "${GREEN}Enter the directory to initialize (leave blank for current directory): ${BLUE}" dir
    if [[ -z "$dir" ]]; then
        git init || echo -e "${RED}Error: Failed to initialize repository.${RESETBG}"
    else
        git init "$dir" || echo -e "${RED}Error: Failed to initialize repository in '$dir'.${RESETBG}"
    fi
    echo -e "${GREEN}Repository initialized.${RESETBG}"
}

configuration_setup